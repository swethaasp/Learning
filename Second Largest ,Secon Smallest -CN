Problem statement
You have been given an array ‘a’ of ‘n’ unique non-negative integers.



Find the second largest and second smallest element from the array.



Return the two elements (second largest and second smallest) as another array of size 2.



Example :
Input: ‘n’ = 5, ‘a’ = [1, 2, 3, 4, 5]
Output: [4, 2]

The second largest element after 5 is 4, and the second smallest element after 1 is 2.
Detailed explanation ( Input/output format, Notes, Images )
Sample Input 1 :
4
3 4 5 2
Sample Output 1 :
4 3
Explanation For Sample Input 1 :
The second largest element after 5 is 4 only, and the second smallest element after 2 is 3.
Sample Input 2 :
5
4 5 3 6 7
Sample Output 2 :
6 4
Expected Time Complexity:
O(n), Where ‘n’ is the size of an input array ‘a’.
Constraints:
2 ≤ 'n' ≤ 10^5
0 ≤ 'a'[i] ≤ 10^9

Time limit: 1 sec


Hints:
1. Sort the array.
2. More efficiently, can you use the largest



public class Solution {
    public static int[] getSecondOrderElements(int n, int []a) {
        // Write your code here.
        int secondLargest= secondLargest(a,n);
        int secondSmallest=secondSmallest(a,n);
         int[]  arr ={secondLargest,secondSmallest};
         return arr;
    }

     static private int secondLargest(int[]a ,int n){
         if(n<2){
             return -1;
         }
      int largest=a[0];
      int secLarge=Integer.MIN_VALUE;
      for(int i=1;i<n;i++){
          if(a[i]>largest){
              secLarge=largest;
              largest=a[i];
          }

          else if(a[i]<largest && a[i]>secLarge){
              secLarge=a[i];
          }
      }
        if(secLarge==Integer.MIN_VALUE){
            return -1;
        }

      return secLarge;
    }


     static private int secondSmallest(int[] a ,int n){
         if(n<2){
             return -1;
         }
        int small=a[0];
        int ssmall=Integer.MAX_VALUE;
        for(int j=1;j<n;j++){
            if(a[j]<small){
                ssmall=small;
                small=a[j];
            }
            else if(a[j]<ssmall && a[j]>small){
                ssmall=a[j];
            }
        }
        if(ssmall==Integer.MAX_VALUE){
            return -1;
        }
        return ssmall;
    }
}
