Given an array, arr of integers, your task is to return the smallest and second smallest element in the array. If the smallest and second smallest do not exist, return -1.

Examples:

Input: arr[] = [2, 4, 3, 5, 6]
Output: 2 3 
Explanation: 2 and 3 are respectively the smallest and second smallest elements in the array.
Input: arr[] = [1, 1, 1]
Output: -1
Explanation: Only element is 1 which is smallest, so there is no second smallest element.
Expected Time Complexity: O(n)
Expected Auxillary Space: O(1)

Constraints:
1 <= arr.size <= 105
1 <= arr[i] <= 105

class Solution {
    public int[] minAnd2ndMin(int arr[]) {
        // code here
        int small=Integer.MAX_VALUE;
        int ssmall=Integer.MAX_VALUE;
        int res[] =new int[2];
        for(int i=0;i<arr.length;i++){
            if(arr[i]<small){
                ssmall=small;
                small=arr[i];
            }
            
            else if(arr[i]<ssmall && arr[i]>small){
                ssmall=arr[i];
            }
        }
        if(ssmall==Integer.MAX_VALUE || small==Integer.MAX_VALUE){
            res[0]=-1;
            return res;
        }
        
        res[0]=small;
        res[1]=ssmall;
        return  res;
        
    }
}
