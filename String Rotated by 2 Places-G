Given two strings a and b. The task is to find if the string 'b' can be obtained by rotating (in any direction) string 'a' by exactly 2 places.

Example 1:

Input:
a = amazon
b = azonam
Output: 
1
Explanation: 
amazon can be rotated anti-clockwise by two places, which will make it as azonam.
Example 2:

Input:
a = geeksforgeeks
b = geeksgeeksfor
Output: 
0
Explanation: 
If we rotate geeksforgeeks by two place in any direction, we won't get geeksgeeksfor.
Your Task:
The task is to complete the function isRotated() which takes two strings as input parameters and checks if given strings can be formed by rotations. The function returns true if string 1 can be obtained by rotating string 2 by two places, else it returns false.

Expected Time Complexity: O(N).
Expected Auxilary Complexity: O(N).
Challenge: Try doing it in O(1) space complexity.

Constraints:
1 ≤ length of a, b ≤ 105


class Solution
{
    //Function to check if a string can be obtained by rotating
    //another string by exactly 2 places.
    public static boolean isRotated(String str1, String str2)
    {
        // Your code here
        if(str1.length()!=str2.length()){
            return false;
        }
        if(str1.length()==1 && str2.length()==1){
            if(str1.charAt(0)!=str2.charAt(0)){
                return false;
            }
        }
        String left=str1.substring(2)+str1.substring(0,2);
        if(str2.equals(left)){
            return true;
        }
        String right=str1.substring(str1.length()-2)+str1.substring(0,str1.length()-2);
        if(str2.equals(right)){
            return true;
        }

        return false;
    }
    
}

//other approach 
class Solution {
    // Function to check if a string can be obtained by rotating
    // another string by exactly 2 places.
    public static boolean isRotated(String str1, String str2) {
        // Check if lengths are the same
        if (str1.length() != str2.length()) {
            return false;
        }
        
        // Perform left rotation by 2 places
        String leftRotation = str1.substring(2) + str1.substring(0, 2);
        
        // Perform right rotation by 2 places
        String rightRotation = str1.substring(str1.length() - 2) + str1.substring(0, str1.length() - 2);
        
        // Check if str2 matches either left or right rotation
        return str2.equals(leftRotation) || str2.equals(rightRotation);
    }
}
