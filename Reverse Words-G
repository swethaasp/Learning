Given a String S, reverse the string without reversing its individual words. Words are separated by dots.

Example 1:

Input:
S = i.like.this.program.very.much
Output: much.very.program.this.like.i
Explanation: After reversing the whole
string(not individual words), the input
string becomes
much.very.program.this.like.i
Example 2:

Input:
S = pqr.mno
Output: mno.pqr
Explanation: After reversing the whole
string , the input string becomes
mno.pqr

Your Task:
You dont need to read input or print anything. Complete the function reverseWords() which takes string S as input parameter and returns a string containing the words in reversed order. Each word in the returning string should also be separated by '.' 


Expected Time Complexity: O(|S|)
Expected Auxiliary Space: O(|S|)


Constraints:
1 <= |S| <= 105

class Solution 
{
    //Function to reverse words in a given string.
    String reverseWords(String S)
    {
        // code here
        StringBuilder res=new StringBuilder();
        //String[] str=S.split("[.]+");
        String[] str=S.split("\\.");
        for(int i=str.length-1;i>=0;i--){
            res.append(str[i]);
            if(i!=0){
             res.append(".");   
            }
        }
        return res.toString();
    }
}


//leetcode
class Solution {
    public String reverseWords(String s) {
        
        StringBuilder sb =new StringBuilder();
        
        String[] str = s.split("\\s+");
        
        for(int i=str.length-1;i>=0;i--){
          sb.append(str[i] + " "); 
        }
        return sb.toString().trim();
    }
}

